{"ast":null,"code":"import _slicedToArray from \"/Users/ryan/Desktop/leasequery/operations-reporting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryan/Desktop/leasequery/operations-reporting/client/src/components/status/components/Table.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\n\nconst Table = ({\n  load\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        setTableData = _useState2[1];\n\n  const getColumnWidth = (data, accessor, headerText) => {\n    if (typeof accessor === \"string\" || accessor instanceof String) {\n      accessor = d => d[accessor]; // eslint-disable-line no-param-reassign\n\n    }\n\n    const maxWidth = 600;\n    const magicSpacing = 25;\n    const cellLength = Math.max(...data.map(row => (\"\".concat(accessor(row)) || \"\").length), headerText.length);\n    return Math.min(maxWidth, cellLength * magicSpacing);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://localhost:5000/api/status\").then(function (response) {\n      setTableData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [load]); // const data = Object.values(tableData ? tableData : []);\n\n  const data = tableData;\n  const columns = [{\n    id: \"Name\",\n    Header: \"Name\",\n    accessor: \"name\",\n    width: getColumnWidth(data, \"accessor\", \"My header\")\n  }, {\n    Header: \"Date\",\n    accessor: \"date\",\n    width: getColumnWidth(data, \"accessor\", \"My header\")\n  }, {\n    Header: \"Comment\",\n    accessor: \"comment\"\n  }];\n  return React.createElement(ReactTable, {\n    data: data,\n    columns: columns,\n    pivotBy: [\"date\"],\n    defaultPageSize: 7,\n    minRows: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/ryan/Desktop/leasequery/operations-reporting/client/src/components/status/components/Table.js"],"names":["React","useEffect","useState","ReactTable","axios","Table","load","tableData","setTableData","getColumnWidth","data","accessor","headerText","String","d","maxWidth","magicSpacing","cellLength","Math","max","map","row","length","min","get","then","response","catch","error","console","log","columns","id","Header","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,oBACQJ,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACnBK,SADmB;AAAA,QACRC,YADQ;;AAG1B,QAAMC,cAAc,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,UAAjB,KAAgC;AACrD,QAAI,OAAOD,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,YAAYE,MAAxD,EAAgE;AAC9DF,MAAAA,QAAQ,GAAGG,CAAC,IAAIA,CAAC,CAACH,QAAD,CAAjB,CAD8D,CACjC;;AAC9B;;AACD,UAAMI,QAAQ,GAAG,GAAjB;AACA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CACjB,GAAGT,IAAI,CAACU,GAAL,CAASC,GAAG,IAAI,CAAC,UAAGV,QAAQ,CAACU,GAAD,CAAX,KAAsB,EAAvB,EAA2BC,MAA3C,CADc,EAEjBV,UAAU,CAACU,MAFM,CAAnB;AAIA,WAAOJ,IAAI,CAACK,GAAL,CAASR,QAAT,EAAmBE,UAAU,GAAGD,YAAhC,CAAP;AACD,GAXD;;AAaAf,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFoB,GADH,CACO,mCADP,EAEGC,IAFH,CAEQ,UAASC,QAAT,EAAmB;AACvBlB,MAAAA,YAAY,CAACkB,QAAQ,CAAChB,IAAV,CAAZ;AACD,KAJH,EAKGiB,KALH,CAKS,UAASC,KAAT,EAAgB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD,GATQ,EASN,CAACtB,IAAD,CATM,CAAT,CAhB0B,CA2B1B;;AACA,QAAMI,IAAI,GAAGH,SAAb;AAEA,QAAMwB,OAAO,GAAG,CACd;AACEC,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,MAAM,EAAE,MAFV;AAGEtB,IAAAA,QAAQ,EAAE,MAHZ;AAIEuB,IAAAA,KAAK,EAAEzB,cAAc,CAACC,IAAD,EAAO,UAAP,EAAmB,WAAnB;AAJvB,GADc,EAOd;AACEuB,IAAAA,MAAM,EAAE,MADV;AAEEtB,IAAAA,QAAQ,EAAE,MAFZ;AAGEuB,IAAAA,KAAK,EAAEzB,cAAc,CAACC,IAAD,EAAO,UAAP,EAAmB,WAAnB;AAHvB,GAPc,EAYd;AACEuB,IAAAA,MAAM,EAAE,SADV;AAEEtB,IAAAA,QAAQ,EAAE;AAFZ,GAZc,CAAhB;AAkBA,SACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,OAAO,EAAEqB,OAFX;AAGE,IAAA,OAAO,EAAE,CAAC,MAAD,CAHX;AAIE,IAAA,eAAe,EAAE,CAJnB;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAzDD;;AA2DA,eAAe1B,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\n\nconst Table = ({ load }) => {\n  const [tableData, setTableData] = useState([]);\n\n  const getColumnWidth = (data, accessor, headerText) => {\n    if (typeof accessor === \"string\" || accessor instanceof String) {\n      accessor = d => d[accessor]; // eslint-disable-line no-param-reassign\n    }\n    const maxWidth = 600;\n    const magicSpacing = 25;\n    const cellLength = Math.max(\n      ...data.map(row => (`${accessor(row)}` || \"\").length),\n      headerText.length\n    );\n    return Math.min(maxWidth, cellLength * magicSpacing);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://localhost:5000/api/status\")\n      .then(function(response) {\n        setTableData(response.data);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }, [load]);\n\n  // const data = Object.values(tableData ? tableData : []);\n  const data = tableData;\n\n  const columns = [\n    {\n      id: \"Name\",\n      Header: \"Name\",\n      accessor: \"name\",\n      width: getColumnWidth(data, \"accessor\", \"My header\")\n    },\n    {\n      Header: \"Date\",\n      accessor: \"date\",\n      width: getColumnWidth(data, \"accessor\", \"My header\")\n    },\n    {\n      Header: \"Comment\",\n      accessor: \"comment\"\n    }\n  ];\n\n  return (\n    <ReactTable\n      data={data}\n      columns={columns}\n      pivotBy={[\"date\"]}\n      defaultPageSize={7}\n      minRows={5}\n    />\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}