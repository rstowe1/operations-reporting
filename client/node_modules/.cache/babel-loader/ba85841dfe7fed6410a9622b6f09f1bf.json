{"ast":null,"code":"import _slicedToArray from \"/Users/ryan/Desktop/leasequery/operations-reporting/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryan/Desktop/leasequery/operations-reporting/client/src/components/status/components/Table.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\n\nconst Table = ({\n  load\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        tableData = _useState2[0],\n        setTableData = _useState2[1]; // const getColumnWidth = (data, accessor, headerText) => {\n  //   if (typeof accessor === \"string\" || accessor instanceof String) {\n  //     accessor = d => d[accessor]; // eslint-disable-line no-param-reassign\n  //   }\n  //   const maxWidth = 600;\n  //   const magicSpacing = 25;\n  //   const cellLength = Math.max(\n  //     ...data.map(row => (`${accessor(row)}` || \"\").length),\n  //     headerText.length\n  //   );\n  //   return Math.min(maxWidth, cellLength * magicSpacing);\n  // };\n\n\n  useEffect(() => {\n    axios.get(\"https://localhost:5000/api/status\").then(function (response) {\n      setTableData(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  const data = Object.values(tableData ? tableData : []); // const data = tableData;\n\n  const columns = [{\n    id: \"Name\",\n    Header: \"Name\",\n    accessor: \"name\" // width: getColumnWidth(data, \"accessor\", \"My header\")\n\n  }, {\n    Header: \"Date\",\n    accessor: \"date\" // width: getColumnWidth(data, \"accessor\", \"My header\")\n\n  }, {\n    Header: \"Comment\",\n    accessor: \"comment\"\n  }];\n  return React.createElement(ReactTable, {\n    data: data,\n    columns: columns,\n    pivotBy: [\"date\"],\n    defaultPageSize: 7,\n    minRows: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/ryan/Desktop/leasequery/operations-reporting/client/src/components/status/components/Table.js"],"names":["React","useEffect","useState","ReactTable","axios","Table","load","tableData","setTableData","get","then","response","data","catch","error","console","log","Object","values","columns","id","Header","accessor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,oBACQJ,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACnBK,SADmB;AAAA,QACRC,YADQ,kBAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFK,GADH,CACO,mCADP,EAEGC,IAFH,CAEQ,UAASC,QAAT,EAAmB;AACvBH,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAV,CAAZ;AACD,KAJH,EAKGC,KALH,CAKS,UAASC,KAAT,EAAgB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,QAAMF,IAAI,GAAGK,MAAM,CAACC,MAAP,CAAcX,SAAS,GAAGA,SAAH,GAAe,EAAtC,CAAb,CA3B0B,CA4B1B;;AAEA,QAAMY,OAAO,GAAG,CACd;AACEC,IAAAA,EAAE,EAAE,MADN;AAEEC,IAAAA,MAAM,EAAE,MAFV;AAGEC,IAAAA,QAAQ,EAAE,MAHZ,CAIE;;AAJF,GADc,EAOd;AACED,IAAAA,MAAM,EAAE,MADV;AAEEC,IAAAA,QAAQ,EAAE,MAFZ,CAGE;;AAHF,GAPc,EAYd;AACED,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAZc,CAAhB;AAkBA,SACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEV,IADR;AAEE,IAAA,OAAO,EAAEO,OAFX;AAGE,IAAA,OAAO,EAAE,CAAC,MAAD,CAHX;AAIE,IAAA,eAAe,EAAE,CAJnB;AAKE,IAAA,OAAO,EAAE,CALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD,CAzDD;;AA2DA,eAAed,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport axios from \"axios\";\n\nconst Table = ({ load }) => {\n  const [tableData, setTableData] = useState([]);\n\n  // const getColumnWidth = (data, accessor, headerText) => {\n  //   if (typeof accessor === \"string\" || accessor instanceof String) {\n  //     accessor = d => d[accessor]; // eslint-disable-line no-param-reassign\n  //   }\n  //   const maxWidth = 600;\n  //   const magicSpacing = 25;\n  //   const cellLength = Math.max(\n  //     ...data.map(row => (`${accessor(row)}` || \"\").length),\n  //     headerText.length\n  //   );\n  //   return Math.min(maxWidth, cellLength * magicSpacing);\n  // };\n\n  useEffect(() => {\n    axios\n      .get(\"https://localhost:5000/api/status\")\n      .then(function(response) {\n        setTableData(response.data);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }, []);\n\n  const data = Object.values(tableData ? tableData : []);\n  // const data = tableData;\n\n  const columns = [\n    {\n      id: \"Name\",\n      Header: \"Name\",\n      accessor: \"name\"\n      // width: getColumnWidth(data, \"accessor\", \"My header\")\n    },\n    {\n      Header: \"Date\",\n      accessor: \"date\"\n      // width: getColumnWidth(data, \"accessor\", \"My header\")\n    },\n    {\n      Header: \"Comment\",\n      accessor: \"comment\"\n    }\n  ];\n\n  return (\n    <ReactTable\n      data={data}\n      columns={columns}\n      pivotBy={[\"date\"]}\n      defaultPageSize={7}\n      minRows={5}\n    />\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}